
services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: DeliveryOrdersDb
      POSTGRES_USER: OrderAdmin
      POSTGRES_PASSWORD: OrderAdmin123
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  backend:
    image: sacarlitee/deliveryorderapp-backend
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - ASPNETCORE_ENVIRONMENT=Production
      - Cors__ReactAppUrl=http://localhost:3000
      - ConnectionStrings__OrderDbConnection=Host=db;Port=5432;Database=DeliveryOrdersDb;Username=OrderAdmin;Password=OrderAdmin123
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    image: sacarlitee/deliveryorderapp-frontend
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata: